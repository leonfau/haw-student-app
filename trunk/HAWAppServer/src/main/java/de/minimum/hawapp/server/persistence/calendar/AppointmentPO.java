package de.minimum.hawapp.server.persistence.calendar;

// Generated 26.04.2013 13:35:12 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonIgnore;

import de.minimum.hawapp.server.calendar.api.AppointmentBO;

/**
 * CalendarAppointment generated by hbm2java
 */
@Entity
@Table(name = "calendar_appointment", catalog = "haw_app")
public class AppointmentPO implements AppointmentBO, java.io.Serializable {


	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String uuid;
	private LecturePO lecture;
	private String name;
	private Date begin;
	private Date end;
	private String location;
	private String details;
	private Date lastModified;

	public AppointmentPO() {
	}

	public AppointmentPO(String uuid, LecturePO calendarLecture,
			Date lastModified) {
		this.uuid = uuid;
		this.lecture = calendarLecture;
		this.lastModified = lastModified;
	}

	public AppointmentPO(String uuid, LecturePO calendarLecture,
			String name, Date begin, Date end, String location, String details,
			Date lastModified) {
		this.uuid = uuid;
		this.lecture = calendarLecture;
		this.name = name;
		this.begin = begin;
		this.end = end;
		this.location = location;
		this.details = details;
		this.lastModified = lastModified;
	}

	@Id
	@Column(name = "uuid", unique = true, nullable = false)
	public String getUuid() {
		return this.uuid;
	}

	public void setUuid(String uuid) {
		this.uuid = uuid;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Lecture_uuid", nullable = false)
	@JsonIgnore 
	public LecturePO getLecture() {
		return this.lecture;
	}

	public void setLecture(LecturePO calendarLecture) {
		this.lecture = calendarLecture;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "begin", length = 19)
	public Date getBegin() {
		return this.begin;
	}

	public void setBegin(Date begin) {
		this.begin = begin;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end", length = 19)
	public Date getEnd() {
		return this.end;
	}

	public void setEnd(Date end) {
		this.end = end;
	}

	@Column(name = "location")
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "details", length = 1000)
	public String getDetails() {
		return this.details;
	}

	public void setDetails(String details) {
		this.details = details;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastModified", nullable = false, length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((uuid == null) ? 0 : uuid.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		AppointmentPO other = (AppointmentPO) obj;
		if (uuid == null) {
			if (other.uuid != null)
				return false;
		} else if (!uuid.equals(other.uuid))
			return false;
		return true;
	}
}
